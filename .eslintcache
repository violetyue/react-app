[{"E:\\react\\csslayout\\src\\pages\\home.js":"1","E:\\react\\csslayout\\src\\mock\\index.js":"2","E:\\react\\csslayout\\src\\index.js":"3","E:\\react\\csslayout\\src\\App1.js":"4","E:\\react\\csslayout\\src\\pages\\order.js":"5","E:\\react\\csslayout\\src\\pages\\device.js":"6"},{"size":4716,"mtime":1607310451918,"results":"7","hashOfConfig":"8"},{"size":96,"mtime":1606893265147,"results":"9","hashOfConfig":"8"},{"size":435,"mtime":1606805086108,"results":"10","hashOfConfig":"8"},{"size":727,"mtime":1606970299093,"results":"11","hashOfConfig":"8"},{"size":280,"mtime":1606971053983,"results":"12","hashOfConfig":"8"},{"size":282,"mtime":1606971064691,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"318i51",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\csslayout\\src\\pages\\home.js",["28","29"],"import './shenbei.css';\nimport React, { Component } from 'react';\nimport { Input, DatePicker, Button, Table, Select } from 'antd';\nimport 'antd/dist/antd.css';\nimport '../mock/index'\nimport Mock from 'mockjs';\nconst Random = Mock.Random;\n\nconst { Option } = Select;\n\nclass home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      columns: [{\n        title: 'Title',\n        dataIndex: 'title',\n      }, {\n        title: 'Price',\n        dataIndex: 'price',\n      }, {\n        title: 'Action',\n        dataIndex: 'delete',\n        key: 'delete',\n        render: (text,record,index) => <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\n      }],\n      inputTitle: '',\n      inputPrice: '',\n      data: [],\n    }\n  }\n\n  componentDidMount() {\n    //页面加载时就调用查询\n    this.showData()\n  }\n\n\n  showData = () => {\n    const list = localStorage.list;\n    if (list) {\n      //判断是否存在list，localStorage\n      const data = JSON.parse(localStorage.list);\n      this.setState({data})\n    }\n  }\n\n  saveItem = () => {\n    const {data} = this.state;\n    //localStorage中的值是按照字符保存的，所以每次需要用JSON.stringify及JSON.parse转换\n    localStorage.list = JSON.stringify(data);\n  }\n\n  addItem = () => {\n    // const data = JSON.parse(localStorage.list)\n    //因为state中的数据和localStorage的数据是一致的这里，我们就偷懒使用state中的data\n    const {data} = this.state;\n    let arr = data.slice(0)\n    //使用makeNewItem来生成新的数据\n    let newItem = this.makeNewItem()\n    arr.push(newItem)\n    this.setState({data:arr}, ()=>{this.saveItem()})\n  }\n\n  makeNewItem = () => {\n    const { data } = this.state;\n    //生成唯一的key\n    let lastKey = 1;\n    if (data.length){\n      lastKey = data[data.length - 1].key\n    }\n    let newItem = {}\n    newItem.key = lastKey + 1;\n    newItem.title = this.state.inputTitle\n    newItem.price = this.state.inputPrice\n    return newItem\n  }\n  deleteItem = (text, record, index) => {\n    //这里是配置项中我们传入的参数，其中index我们就直接可以在splice中使用\n    console.log(text, record, index)\n    // const data = JSON.parse(localStorage.list)\n    //因为state中的数据和localStorage的数据是一致的这里，我们就偷懒使用state中的data\n    const {data} = this.state;\n    let arr = data.slice(0)\n    arr.splice(index,1)\n    //数组slice和splice语法再掌握一下\n    this.setState({data:arr}, ()=>{this.saveItem()})\n  }\n\n  titleInput(e) {\n    this.setState({\n      inputTitle: e.target.value,\n    })\n  }\n  priceInput(e) {\n    this.setState({\n      inputPrice: e.target.value,\n    })\n  }\n\n  render() { \n    let data = this.state.data\n    let columns = this.state.columns\n    return (\n      <div>\n            <div className='inputarea'>\n              <div className='name'>\n                <label htmlFor='name'>Name: </label>\n                <Input placeholder=\"name\" style={{ width: '80%' }} />\n              </div>\n              <div className='period'>\n                <label>Period: </label>\n                <DatePicker.RangePicker style={{ width: '85%' }} />\n              </div>\n              <div className='statusarea'>\n                <label>Status: </label>\n                <Select defaultValue='Not Start'>\n                  <Option value='not start'>Not start</Option>\n                  <Option value='processing'>Processing</Option>\n                  <Option value='finished'>Finished</Option>\n                </Select>\n              </div>\n              <div className='buttonarea'>\n                <Button>Submit</Button>\n              </div>  \n            </div>\n            <div className='addarea'>\n                <div className='inputTitle'>\n                  <label htmlFor='input title'>Title: </label>\n                  <Input style={{ width: '30%' }} value={this.state.inputTitle} onChange={this.titleInput.bind(this)}/>\n                </div>\n                <div className='inputPrice'>\n                  <label htmlFor='input price'>Price: </label>\n                  <Input style={{ width: '30%' }} value={this.state.inputPrice} onChange={this.priceInput.bind(this)}/>\n                </div>\n                <Button onClick={this.addItem.bind(this)}>Input</Button>\n            </div>\n            <div className='tablearea'>\n              <Button onClick={this.addItem.bind(this)}>Add</Button>\n              <Button onClick={this.showData.bind(this)}>Show</Button>\n              {\n                <Table columns={columns} dataSource={data} />\n              }\n              \n            </div>\n            \n      </div>\n    );\n  }\n}\n \nexport default home;","E:\\react\\csslayout\\src\\mock\\index.js",[],"E:\\react\\csslayout\\src\\index.js",[],"E:\\react\\csslayout\\src\\App1.js",[],["30","31"],"E:\\react\\csslayout\\src\\pages\\order.js",[],"E:\\react\\csslayout\\src\\pages\\device.js",[],{"ruleId":"32","severity":1,"message":"33","line":7,"column":7,"nodeType":"34","messageId":"35","endLine":7,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":25,"column":40,"nodeType":"38","endLine":25,"endColumn":117},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"no-unused-vars","'Random' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]